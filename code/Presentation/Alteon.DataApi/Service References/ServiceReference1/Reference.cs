//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alteon.DataApi.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISentNote")]
    public interface ISentNote {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentNote/Send", ReplyAction="http://tempuri.org/ISentNote/SendResponse")]
        bool Send(string app_key, string sign, string content, string[] phone, int platform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentNote/Send", ReplyAction="http://tempuri.org/ISentNote/SendResponse")]
        System.Threading.Tasks.Task<bool> SendAsync(string app_key, string sign, string content, string[] phone, int platform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentNote/SentCustomExt", ReplyAction="http://tempuri.org/ISentNote/SentCustomExtResponse")]
        bool SentCustomExt(string app_key, string sign, string content, string[] phone, string ext, int platform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentNote/SentCustomExt", ReplyAction="http://tempuri.org/ISentNote/SentCustomExtResponse")]
        System.Threading.Tasks.Task<bool> SentCustomExtAsync(string app_key, string sign, string content, string[] phone, string ext, int platform);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentNote/AliSmsSent", ReplyAction="http://tempuri.org/ISentNote/AliSmsSentResponse")]
        bool AliSmsSent(string app_key, string sign, string smsFreeSignName, string smsTemplateCode, string smsParam, string[] phones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISentNote/AliSmsSent", ReplyAction="http://tempuri.org/ISentNote/AliSmsSentResponse")]
        System.Threading.Tasks.Task<bool> AliSmsSentAsync(string app_key, string sign, string smsFreeSignName, string smsTemplateCode, string smsParam, string[] phones);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISentNoteChannel : Alteon.DataApi.ServiceReference1.ISentNote, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SentNoteClient : System.ServiceModel.ClientBase<Alteon.DataApi.ServiceReference1.ISentNote>, Alteon.DataApi.ServiceReference1.ISentNote {
        
        public SentNoteClient() {
        }
        
        public SentNoteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SentNoteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SentNoteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SentNoteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Send(string app_key, string sign, string content, string[] phone, int platform) {
            return base.Channel.Send(app_key, sign, content, phone, platform);
        }
        
        public System.Threading.Tasks.Task<bool> SendAsync(string app_key, string sign, string content, string[] phone, int platform) {
            return base.Channel.SendAsync(app_key, sign, content, phone, platform);
        }
        
        public bool SentCustomExt(string app_key, string sign, string content, string[] phone, string ext, int platform) {
            return base.Channel.SentCustomExt(app_key, sign, content, phone, ext, platform);
        }
        
        public System.Threading.Tasks.Task<bool> SentCustomExtAsync(string app_key, string sign, string content, string[] phone, string ext, int platform) {
            return base.Channel.SentCustomExtAsync(app_key, sign, content, phone, ext, platform);
        }
        
        public bool AliSmsSent(string app_key, string sign, string smsFreeSignName, string smsTemplateCode, string smsParam, string[] phones) {
            return base.Channel.AliSmsSent(app_key, sign, smsFreeSignName, smsTemplateCode, smsParam, phones);
        }
        
        public System.Threading.Tasks.Task<bool> AliSmsSentAsync(string app_key, string sign, string smsFreeSignName, string smsTemplateCode, string smsParam, string[] phones) {
            return base.Channel.AliSmsSentAsync(app_key, sign, smsFreeSignName, smsTemplateCode, smsParam, phones);
        }
    }
}
